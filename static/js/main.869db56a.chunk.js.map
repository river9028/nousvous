{"version":3,"sources":["global-styles.ts","constants/routes.ts","components/home/styles/home.tsx","components/home/index.tsx","components/press-button/styles/press-button.tsx","components/press-button/index.tsx","components/footer/styles/footer.tsx","context/side-panel.ts","context/bio.ts","components/footer/index.tsx","components/popup/styles/popup.tsx","components/popup/index.tsx","components/side-panel/styles/side-panel.tsx","components/side-panel/index.tsx","components/header/styles/header.tsx","components/header/index.tsx","components/bio/styles/bio.tsx","components/bio/index.tsx","containers/home.tsx","pages/main.tsx","pages/press.tsx","fixtures/person-info.ts","pages/person.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","process","PRESS","PERSON","Container","styled","div","Pane","Text","h1","Group","TextLink","ReachRouterLink","Background","src","backgroundColor","active","Video","video","HomeContext","createContext","showBackground","setShowBackground","Home","children","restProps","useState","Provider","value","to","useContext","onMouseEnter","onMouseLeave","ROUTES","isVideo","muted","loop","autoPlay","type","showLoading","css","Caption","Logo","Image","img","PressButton","history","useHistory","setShowLoading","onClick","console","log","setTimeout","push","Frame","Form","form","Input","input","Button","button","SidePanelContext","showSidePanel","setShowSidePanel","BioContext","showBio","setShowBio","Footer","e","preventDefault","close","Close","p","PopupContext","setClose","setCookie","name","options","Popup","useCookies","cookies","useEffect","today","Date","tomorrow","setDate","getDate","expires","a","SidePanel","href","target","Back","Profile","Contact","Header","goBack","Bio","bio","dangerouslySetInnerHTML","__html","HomeContainer","showInstagram","setShowInstagram","showTwitter","setShowTwitter","Main","style","position","width","height","overflow","Press","email","Person","useParams","split","map","str","toUpperCase","slice","person","PersonInfo","replaceAll","App","basename","exact","path","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.869db56a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\t\r\n\t@font-face {\r\n    font-family: 'Brandon Grotesque Regular';\t//폰트를 사용할 때 부르는 이름 지정\r\n    src: url('${process.env.PUBLIC_URL}/font/BrandonGrotesque-Regular.woff') format('woff');\r\n    font-weight: 300; \t\t//폰트 기본 설정\r\n    font-style: normal;\r\n\t}\r\n\r\n\thtml{\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\tbody {\r\n    margin: 0;\r\n    font-family: \"Brandon Grotesque Regular\";\r\n    font-weight: 300;\r\n    font-style: normal;\r\n    font-stretch: normal;\r\n    color: #000;\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    -webkit-font-smoothing: antialiased;\r\n    overflow-x: hidden;\r\n\t}\r\n`;\r\n","export const MAIN = '/';\r\nexport const PRESS = '/press';\r\nexport const PERSON = '/person';\r\n","import styled from 'styled-components';\r\nimport { Link as ReachRouterLink } from 'react-router-dom';\r\n\r\n// 받아올 Props의 타입을 정의\r\ntype Background = {\r\n  src?: string;\r\n  backgroundColor?: string;\r\n  active: boolean;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 35px;\r\n  width: calc(100vw - 35px);\r\n  height: 100%;\r\n\r\n  @media (min-width: 45em) {\r\n    left: 50px;\r\n    width: calc(100vw - 50px);\r\n  }\r\n`;\r\n\r\nexport const Pane = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  font-size: 0;\r\n`;\r\n\r\nexport const Text = styled.h1`\r\n  display: inline-block;\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.5s ease;\r\n  z-index: 10;\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  @media (min-width: 45em) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  &:nth-child(1) ${Text} {\r\n    top: 14%;\r\n    left: 50%;\r\n  }\r\n  &:nth-child(2) ${Text} {\r\n    top: 34%;\r\n    left: 50%;\r\n  }\r\n  &:nth-child(3) ${Text} {\r\n    top: 54%;\r\n    left: 50%;\r\n  }\r\n  &:nth-child(4) ${Text} {\r\n    top: 74%;\r\n    left: 50%;\r\n  }\r\n\r\n  @media (min-width: 45em) {\r\n    &:nth-child(1) ${Text} {\r\n      left: 75%;\r\n      top: 17%;\r\n    }\r\n    &:nth-child(2) ${Text} {\r\n      left: 25%;\r\n      top: 37%;\r\n    }\r\n    &:nth-child(3) ${Text} {\r\n      left: auto;\r\n      right: 15%;\r\n      top: 57%;\r\n    }\r\n    &:nth-child(4) ${Text} {\r\n      left: 35%;\r\n      top: 77%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TextLink = styled(ReachRouterLink)`\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n  color: #000;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  white-space: nowrap;\r\n`;\r\n\r\n// 제네릭을 이용해 정의한 Props 타입을 사용\r\nexport const Background = styled.div<Background>`\r\n  ${({ src, backgroundColor }) =>\r\n    src\r\n      ? `background-image: url(${src})`\r\n      : `background-color: ${backgroundColor}`};\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  z-index: 2;\r\n\r\n  opacity: ${({ active }) => (active ? '1' : '0')};\r\n  transition: opacity 0.3s ease;\r\n`;\r\n\r\nexport const Video = styled.video`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0px;\r\n  width: 100%;\r\n  transform: translate(0px, -50%);\r\n`;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Group,\r\n  Background,\r\n  Pane,\r\n  Text,\r\n  TextLink,\r\n  Video,\r\n} from './styles/home';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n// Home 컴포넌트에서 사용되는 컨텍스트 타입을 정의\r\ntype HomeContext = {\r\n  showBackground: boolean;\r\n  setShowBackground: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\n// Home 컴포넌트 및 하위 컴포넌트의 타입을 정의\r\ntype Background = {\r\n  src: string;\r\n  isVideo?: boolean;\r\n};\r\n\r\ntype TextLink = {\r\n  to: string;\r\n};\r\n\r\ntype Home = {\r\n  Group: React.FC;\r\n  Pane: React.FC;\r\n  TextLink: React.FC<TextLink>;\r\n  Background: React.FC<Background>;\r\n};\r\n\r\n// 위에 정의한 타입과 제네릭을 이용해 컨텍스트 생성.\r\n// null-check를 하지 않기 위해, initial state를 정의해 주었다.\r\nconst HomeContext = createContext<HomeContext>({\r\n  showBackground: false,\r\n  setShowBackground: () => null,\r\n});\r\n\r\n// Home 컴포넌트. &(Intersection) 타입을 이용해 React.FC 뿐만 아니라 Home 타입도 구현할 수 있도록 했다.\r\nconst Home: React.FC & Home = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst HomeGroup: React.FC = ({ children, ...restProps }) => {\r\n  // 배경화면을 opacity 값을 결정하는 상태\r\n  const [showBackground, setShowBackground] = useState(false);\r\n  return (\r\n    // 컨텍스트를 이용해 하위 children에서 상태를 전달\r\n    <HomeContext.Provider value={{ showBackground, setShowBackground }}>\r\n      <Group {...restProps}>{children}</Group>\r\n    </HomeContext.Provider>\r\n  );\r\n};\r\n// Home 컴포넌트에 하위 컴포넌트 할당. 상위 컴포넌트를 가져와 하위 컴포넌트들를 조합해 페이지를 구성.\r\nHome.Group = HomeGroup;\r\n\r\nconst HomePane: React.FC = ({ children, ...restProps }) => {\r\n  return <Pane {...restProps}>{children}</Pane>;\r\n};\r\nHome.Pane = HomePane;\r\n\r\n// 컴포넌트의 props는 제네릭을 이용해 타입 지정.\r\n// React.FC를 이용시 children은 기본 타입 할당.\r\nconst HomeTextLink: React.FC<TextLink> = ({ to, children, ...restProps }) => {\r\n  // useContext를 통해 setShowBackground 가져와\r\n  const { setShowBackground } = useContext(HomeContext);\r\n\r\n  // 액션에 따라 상태를 바꿔준다.\r\n  return (\r\n    <Text\r\n      onMouseEnter={() => {\r\n        setShowBackground(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setShowBackground(false);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {/* path parameter를 통해 동적 라우팅 설정 */}\r\n      <TextLink to={`${ROUTES.PERSON}/${to}`}>{children}</TextLink>\r\n    </Text>\r\n  );\r\n};\r\nHome.TextLink = HomeTextLink;\r\n\r\nconst HomeBackground: React.FC<Background> = ({\r\n  src,\r\n  isVideo,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const { showBackground } = useContext(HomeContext);\r\n\r\n  // 바뀐 상태를 전달\r\n  return isVideo ? (\r\n    <Background active={showBackground} backgroundColor='#ebd9c9'>\r\n      <Video muted loop autoPlay>\r\n        <source src={`${process.env.PUBLIC_URL}/${src}`} type='video/mp4' />\r\n      </Video>\r\n    </Background>\r\n  ) : (\r\n    <Background\r\n      active={showBackground}\r\n      src={`${process.env.PUBLIC_URL}/${src}`}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Background>\r\n  );\r\n};\r\nHome.Background = HomeBackground;\r\n\r\nexport default Home;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{ showLoading: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 35px;\r\n  height: 100%;\r\n  background: #000;\r\n  display: block;\r\n  color: #fff;\r\n  transition: all 0.3s ease;\r\n  z-index: 999;\r\n\r\n  @media (min-width: 45em) {\r\n    width: 50px;\r\n  }\r\n\r\n  // ::before 해당 요소 이전에, 첫 자식 요소를 하나 생성. | content: '' |와 함께 사용.\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 100%;\r\n    top: 0px;\r\n    left: 0px;\r\n    transform: translate(-100%, 0px);\r\n    background: #000;\r\n  }\r\n\r\n  :hover {\r\n    ${({ showLoading }) =>\r\n      !showLoading &&\r\n      css`\r\n        transform: translate(10px, 0px);\r\n      `}\r\n  }\r\n\r\n  ${({ showLoading }) =>\r\n    showLoading &&\r\n    css`\r\n      transform: translate(100vw, 0px);\r\n\r\n      ::before {\r\n        width: 100vw;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const Caption = styled.div`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%) rotate(-90deg);\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 100vh;\r\n  text-align: center;\r\n  transform-origin: center;\r\n\r\n  @media (min-width: 45em) {\r\n    font-size: 1.414rem;\r\n    line-height: 1.4em;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  width: 90%;\r\n  left: 5%;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n`;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Caption, Logo, Image } from './styles/press-button';\r\n// 전역상수로 이용할 경로를 저장해 놓은 routes 파일을 가져와 'ROUTES'라는 이름으로 이용\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\ntype Logo = {\r\n  src: string;\r\n};\r\n\r\ntype PressButton = {\r\n  Caption: React.FC;\r\n  Logo: React.FC<Logo>;\r\n};\r\n\r\nconst PressButton: React.FC & PressButton = ({ children, ...restProps }) => {\r\n  const history = useHistory();\r\n  // 메인 화면 검정색 왼쪽바 클릭시, 페이지 전환 효과를 생성할 상태.\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  return (\r\n    <Container\r\n      showLoading={showLoading}\r\n      onClick={() => {\r\n        console.log('clicked');\r\n        setShowLoading(true);\r\n\r\n        setTimeout(() => {\r\n          // 이동할 수 있도록 history 객체의 push를 이용해 ROUTES.PRESS 이동\r\n          history.push(ROUTES.PRESS);\r\n          // 단, 로딩 화면이 2초간 표시된 이후에 실행\r\n        }, 2000);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst PressButtonCaption: React.FC = ({ children, ...restProps }) => {\r\n  return <Caption {...restProps}>{children}</Caption>;\r\n};\r\nPressButton.Caption = PressButtonCaption;\r\n\r\nconst PressButtonLogo: React.FC<Logo> = ({ src, children, ...restProps }) => {\r\n  return (\r\n    <Logo {...restProps}>\r\n      <Image src={`${process.env.PUBLIC_URL}/${src}`} />\r\n    </Logo>\r\n  );\r\n};\r\nPressButton.Logo = PressButtonLogo;\r\n\r\nexport default PressButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  width: 100%;\r\n  padding: 30px;\r\n  z-index: 20;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Frame = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n\r\n  @media (min-width: 45em) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: none;\r\n  @media (min-width: 45em) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: 0px;\r\n  border-bottom: 1px solid #000;\r\n  -webkit-appearance: none;\r\n  border-radius: 0px;\r\n  outline: none;\r\n  line-height: 1em;\r\n  padding: 0px;\r\n  background: transparent;\r\n`;\r\n\r\nexport const Group = styled.form`\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  border: 0;\r\n  background: transparent;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  ::after {\r\n    content: '/';\r\n  }\r\n\r\n  &:last-of-type {\r\n    ::after {\r\n      content: '';\r\n    }\r\n  }\r\n`;\r\n","import React, { createContext } from 'react';\r\n\r\ntype SidePanelContext = {\r\n\tshowSidePanel: boolean;\r\n\tsetShowSidePanel: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst SidePanelContext = createContext<SidePanelContext>({\r\n\tshowSidePanel: false,\r\n\tsetShowSidePanel: () => null,\r\n});\r\n\r\nexport default SidePanelContext;\r\n","import React, { createContext } from 'react';\r\n\r\ntype BioContext = {\r\n\tshowBio: boolean;\r\n\tsetShowBio: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst BioContext = createContext<BioContext>({\r\n\tshowBio: false,\r\n\tsetShowBio: () => null,\r\n});\r\n\r\nexport default BioContext;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { Container, Frame, Form, Input, Group, Button } from './styles/footer';\r\nimport { SidePanelContext } from '../../context';\r\n\r\ntype Footer = {\r\n  Frame: React.FC;\r\n  Form: React.FC;\r\n  Group: React.FC;\r\n  Input: React.FC;\r\n  Button: React.FC;\r\n};\r\n\r\nconst Footer: React.FC & Footer = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst FooterFrame: React.FC = ({ children, ...restProps }) => {\r\n  return <Frame {...restProps}>{children}</Frame>;\r\n};\r\nFooter.Frame = FooterFrame;\r\n\r\nconst FooterForm: React.FC = ({ children, ...restProps }) => {\r\n  return <Form {...restProps}>{children}</Form>;\r\n};\r\nFooter.Form = FooterForm;\r\n\r\nconst FooterInput: React.FC = ({ children, ...restProps }) => {\r\n  return <Input {...restProps}>{children}</Input>;\r\n};\r\nFooter.Input = FooterInput;\r\n\r\nconst FooterGroup: React.FC = ({ children, ...restProps }) => {\r\n  return <Group {...restProps}>{children}</Group>;\r\n};\r\nFooter.Group = FooterGroup;\r\n\r\nconst FooterButton: React.FC = ({ children, ...restProps }) => {\r\n  const { setShowSidePanel } = useContext(SidePanelContext);\r\n\r\n  return (\r\n    <Button\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        setShowSidePanel(true);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\nFooter.Button = FooterButton;\r\n\r\nexport default Footer;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{ close: boolean }>`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  max-width: 600px;\r\n  padding: 40px;\r\n  background: #f04e53;\r\n  color: #281246;\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n  z-index: 999;\r\n  max-height: 70vh;\r\n  overflow: auto;\r\n  transition: opacity 0.3s ease;\r\n\r\n  ${({ close }) =>\r\n    close &&\r\n    css`\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `};\r\n\r\n  @media (min-width: 45em) {\r\n    font-size: 1.414rem;\r\n    line-height: 1.4em;\r\n  }\r\n`;\r\n\r\nexport const Close = styled.button`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-image: url(${`${process.env.PUBLIC_URL}/images/icon/close-navy.svg`});\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 0;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0px;\r\n  margin-bottom: 1em;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { CookieSetOptions } from 'universal-cookie';\r\nimport { Container, Close, Text } from './styles/popup';\r\n\r\ntype PopupContext = {\r\n  close: boolean;\r\n  setClose: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setCookie: (\r\n    name: string,\r\n    value: any,\r\n    options?: CookieSetOptions | undefined,\r\n  ) => void;\r\n};\r\n\r\ntype Popup = {\r\n  Close: React.FC;\r\n  Text: React.FC;\r\n};\r\n\r\nconst PopupContext = createContext<PopupContext>({\r\n  close: true,\r\n  setClose: () => null,\r\n  setCookie: (\r\n    name: string,\r\n    value: any,\r\n    options?: CookieSetOptions | undefined,\r\n  ) => null,\r\n});\r\n\r\nconst Popup: React.FC & Popup = ({ children, ...restProps }) => {\r\n  const [close, setClose] = useState(true);\r\n  // react-cookie를 이용해 팝업의 close 상태를 쿠키에 저장\r\n  const [cookies, setCookie, removeCookie] = useCookies(['close']);\r\n\r\n  useEffect(() => {\r\n    // 쿠키에 close가 없으면\r\n    if (!cookies.close) {\r\n      // close의 상태를 false로 변경('팝업을 닫지 않음')\r\n      setClose(false);\r\n    } else {\r\n      // 아니면, close의 상태를 ture(initial state)로 변경('팝업을 닫음')\r\n      setClose(true);\r\n    }\r\n  }, [cookies, cookies.close, setCookie]);\r\n\r\n  return (\r\n    <PopupContext.Provider value={{ close, setClose, setCookie }}>\r\n      <Container close={close} {...restProps}>\r\n        {children}\r\n      </Container>\r\n    </PopupContext.Provider>\r\n  );\r\n};\r\n\r\nconst PopupClose: React.FC = ({ children, ...restProps }) => {\r\n  const { setClose, setCookie } = useContext(PopupContext);\r\n\r\n  // 내일 날짜의 Date를 가져오기 위한 식\r\n  const today = new Date();\r\n  const tomorrow = new Date(today);\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n  console.log(tomorrow);\r\n\r\n  return (\r\n    <Close\r\n      onClick={() => {\r\n        console.log('close');\r\n        // 클로즈 버튼을 누르면 팝업을 닫고,\r\n        setClose(true);\r\n        // 쿠키 또한 새롭게 설정해 준다. setCookie('key', 'value', {option})\r\n        setCookie('close', true, {\r\n          expires: tomorrow,\r\n          // maxAge: 5,\r\n        });\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Close>\r\n  );\r\n};\r\nPopup.Close = PopupClose;\r\n\r\nconst PopupText: React.FC = ({ children, ...restProps }) => {\r\n  return <Text {...restProps}>{children}</Text>;\r\n};\r\nPopup.Text = PopupText;\r\n\r\nexport default Popup;\r\n","import styled, { css } from 'styled-components';\r\n\r\ntype Group = {\r\n  showSidePanel: boolean;\r\n};\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Group = styled.div<Group>`\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  width: 80%;\r\n  max-width: 400px;\r\n  height: 100%;\r\n  background: #f193a2;\r\n  z-index: 20;\r\n  transform: translate(100%, 0px);\r\n  transition: transform 0.3s ease;\r\n  overflow: auto;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n\r\n  transform: ${({ showSidePanel }) =>\r\n    showSidePanel ? 'translate(0px, 0px)' : 'translate(100%, 0px)'};\r\n\r\n  &:first-child {\r\n    padding-top: 60px;\r\n    background: #d2dccb;\r\n  }\r\n`;\r\n\r\nexport const Close = styled.button`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-image: url(${`${process.env.PUBLIC_URL}/images/icon/close-navy.svg`});\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 0;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const TextLink = styled.a`\r\n  color: #000;\r\n  text-decoration: none;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { Container, Group, Close, TextLink } from './styles/side-panel';\r\nimport { SidePanelContext } from '../../context';\r\n\r\ntype SidePanel = {\r\n  Group: React.FC;\r\n  Close: React.FC;\r\n  TextLink: React.FC<{ href: string }>;\r\n};\r\n\r\nconst SidePanel: React.FC & SidePanel = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst SidePanelGroup: React.FC = ({ children, ...restProps }) => {\r\n  const { showSidePanel } = useContext(SidePanelContext);\r\n  return (\r\n    <Group showSidePanel={showSidePanel} {...restProps}>\r\n      {children}\r\n    </Group>\r\n  );\r\n};\r\nSidePanel.Group = SidePanelGroup;\r\n\r\nconst SidePanelClose: React.FC = ({ children, ...restProps }) => {\r\n  const { setShowSidePanel } = useContext(SidePanelContext);\r\n\r\n  return (\r\n    <Close\r\n      onClick={() => {\r\n        console.log('close');\r\n        setShowSidePanel(false);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Close>\r\n  );\r\n};\r\nSidePanel.Close = SidePanelClose;\r\n\r\nconst SidePanelTextLink: React.FC<{ href: string }> = ({\r\n  href,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    // 새 탭에서 뜰 수 있도록 target='_blank' 추가\r\n    <TextLink href={href} target='_blank' {...restProps}>\r\n      {children}\r\n    </TextLink>\r\n  );\r\n};\r\nSidePanel.TextLink = SidePanelTextLink;\r\n\r\nexport default SidePanel;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: auto;\r\n  box-sizing: border-box;\r\n  padding: 30px 30px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  z-index: 9;\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n\r\n  @media (min-width: 45em) {\r\n    font-size: 1.9994rem;\r\n    line-height: 1.4em;\r\n  }\r\n`;\r\n\r\nexport const Back = styled.button`\r\n  border: 0;\r\n  background: transparent;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Profile = styled.button`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n\r\n  border: 0;\r\n  background: transparent;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Contact = styled.a`\r\n  font-size: 0px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  ::before {\r\n    content: '';\r\n    width: 25px;\r\n    height: 23px;\r\n    background-image: url(${`${process.env.PUBLIC_URL}/images/icon/email.svg`});\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  @media (min-width: 50em) {\r\n    font-size: 1.9994rem;\r\n    line-height: 1.4em;\r\n\r\n    ::before {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { BioContext } from '../../context';\r\nimport { Container, Back, Profile, Contact } from './styles/header';\r\n\r\ntype Header = {\r\n  Back: React.FC;\r\n  Profile: React.FC;\r\n  Contact: React.FC;\r\n};\r\n\r\nconst Header: React.FC & Header = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst HeaderBack: React.FC = ({ children, ...restProps }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Back\r\n      onClick={() => {\r\n        history.goBack();\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Back>\r\n  );\r\n};\r\nHeader.Back = HeaderBack;\r\n\r\nconst HeaderProfile: React.FC = ({ children, ...restProps }) => {\r\n  const { setShowBio } = useContext(BioContext);\r\n\r\n  return (\r\n    <Profile\r\n      onClick={() => {\r\n        setShowBio(false);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Profile>\r\n  );\r\n};\r\nHeader.Profile = HeaderProfile;\r\n\r\nconst HeaderContact: React.FC = ({ children, ...restProps }) => {\r\n  return <Contact {...restProps}>{children}</Contact>;\r\n};\r\nHeader.Contact = HeaderContact;\r\n\r\nexport default Header;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{ close: boolean }>`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  max-width: 800px;\r\n  max-height: 70vh;\r\n  padding: 40px;\r\n  background: #000;\r\n  color: #fff;\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n  z-index: 10;\r\n  max-height: 70vh;\r\n  overflow: auto;\r\n  transition: opacity 0.3s ease;\r\n  box-sizing: border-box;\r\n\r\n  ${({ close }) =>\r\n    close &&\r\n    css`\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `};\r\n\r\n  @media (min-width: 45em) {\r\n    font-size: 1.414rem;\r\n    line-height: 1.4em;\r\n  }\r\n`;\r\n\r\nexport const Close = styled.button`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-image: url(${`${process.env.PUBLIC_URL}/images/icon/close-navy.svg`});\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 0;\r\n  background-color: transparent;\r\n  color: #fff;\r\n  filter: brightness(0) invert(1);\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0px;\r\n  margin-bottom: 1em;\r\n\r\n  strong,\r\n  b {\r\n    font-weight: 600;\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  a {\r\n    color: white;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { BioContext } from '../../context';\r\nimport { Container, Close, Text } from './styles/bio';\r\n\r\ntype Bio = {\r\n  Close: React.FC;\r\n  Text: React.FC<{ bio: string }>;\r\n};\r\n\r\nconst Bio: React.FC & Bio = ({ children, ...restProps }) => {\r\n  const { showBio } = useContext(BioContext);\r\n  return (\r\n    <Container close={showBio} {...restProps}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst BioClose: React.FC = ({ children, ...restProps }) => {\r\n  const { setShowBio } = useContext(BioContext);\r\n  return (\r\n    <Close\r\n      onClick={() => {\r\n        console.log('close');\r\n        setShowBio(true);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Close>\r\n  );\r\n};\r\nBio.Close = BioClose;\r\n\r\nconst BioText: React.FC<{ bio: string }> = ({\r\n  bio,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <Text dangerouslySetInnerHTML={{ __html: bio }} {...restProps}>\r\n      {children}\r\n    </Text>\r\n  );\r\n};\r\nBio.Text = BioText;\r\n\r\nexport default Bio;\r\n","import React, { useState } from 'react';\r\nimport { Footer, Home, SidePanel } from '../components';\r\n\r\n// 전역에서 사용할 수 있는 전역 컨텍스트로 선언해 불러와 사용\r\nimport { SidePanelContext } from '../context';\r\n\r\nconst HomeContainer = () => {\r\n  // 푸터 오른쪽 하단 버튼 클릭시, 사이드 패널을 보여줄 상태 (twitter, instagram)\r\n  const [showInstagram, setShowInstagram] = useState(false);\r\n  const [showTwitter, setShowTwitter] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Home>\r\n        <Home.Pane>\r\n          <Home.Group>\r\n            <Home.TextLink to='together'>Together</Home.TextLink>\r\n            <Home.Background isVideo src='videos/background/together.mp4' />\r\n          </Home.Group>\r\n\r\n          <Home.Group>\r\n            <Home.TextLink to='nicolas-burrows'>Nicolas Burrows</Home.TextLink>\r\n            <Home.Background src='images/background/nicolas-burrows.jpg' />\r\n          </Home.Group>\r\n\r\n          <Home.Group>\r\n            <Home.TextLink to='jay-cover'>Jay Cover</Home.TextLink>\r\n            <Home.Background src='images/background/jay-cover.jpg' />\r\n          </Home.Group>\r\n\r\n          <Home.Group>\r\n            <Home.TextLink to='william-luz'>William Luz</Home.TextLink>\r\n            <Home.Background src='images/background/william-luz.jpg' />\r\n          </Home.Group>\r\n        </Home.Pane>\r\n\r\n        <Footer>\r\n          <Footer.Frame>\r\n            <Footer.Group>\r\n              <Footer.Form>\r\n                {/* -eslint 경고로 인해 추가해 주었다. jsx-a11y/label-has-associated-control\": 0 */}\r\n                <label>\r\n                  mailing list &nbsp;\r\n                  <Footer.Input />\r\n                </label>\r\n              </Footer.Form>\r\n            </Footer.Group>\r\n\r\n            {/* 두 버튼을 감싸고 있는 Footer Group 컴포넌트 상단에 컨텍스트를 감싸 줌 */}\r\n            {/* but, value를 다르게 지정해 서로 다른 Side Panel이 나올 수 있도록 함 */}\r\n            <Footer.Group>\r\n              <SidePanelContext.Provider\r\n                value={{\r\n                  showSidePanel: showTwitter,\r\n                  setShowSidePanel: setShowTwitter,\r\n                }}\r\n              >\r\n                <Footer.Button>twitter</Footer.Button>\r\n              </SidePanelContext.Provider>\r\n              <SidePanelContext.Provider\r\n                value={{\r\n                  showSidePanel: showInstagram,\r\n                  setShowSidePanel: setShowInstagram,\r\n                }}\r\n              >\r\n                <Footer.Button>instagram</Footer.Button>\r\n              </SidePanelContext.Provider>\r\n            </Footer.Group>\r\n          </Footer.Frame>\r\n        </Footer>\r\n      </Home>\r\n\r\n      <SidePanel>\r\n        {/* SidePanel Group도 위와 동일 */}\r\n        <SidePanelContext.Provider\r\n          value={{\r\n            showSidePanel: showInstagram,\r\n            setShowSidePanel: setShowInstagram,\r\n          }}\r\n        >\r\n          <SidePanel.Group>\r\n            <SidePanel.Close />\r\n            <SidePanel.TextLink href='https://www.instagram.com/nous_vous_collective/'>\r\n              Follow us on Instagram\r\n            </SidePanel.TextLink>\r\n          </SidePanel.Group>\r\n        </SidePanelContext.Provider>\r\n\r\n        <SidePanelContext.Provider\r\n          value={{\r\n            showSidePanel: showTwitter,\r\n            setShowSidePanel: setShowTwitter,\r\n          }}\r\n        >\r\n          <SidePanel.Group>\r\n            <SidePanel.Close />\r\n            <SidePanel.TextLink href='https://twitter.com/nousvous'>\r\n              Follow us on Twitter\r\n            </SidePanel.TextLink>\r\n          </SidePanel.Group>\r\n        </SidePanelContext.Provider>\r\n      </SidePanel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport { Popup, PressButton } from '../components';\r\nimport { HomeContainer } from '../containers';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <PressButton>\r\n        <PressButton.Caption>\r\n          <b>Nous Vous Press</b>\r\n          &nbsp; Books, prints & editions\r\n        </PressButton.Caption>\r\n\r\n        <PressButton.Logo src='/images/logo/nvpress.svg' />\r\n      </PressButton>\r\n\r\n      <HomeContainer />\r\n\r\n      <Popup>\r\n        <Popup.Close />\r\n        <Popup.Text>\r\n          Nous Vous is a collective of artists &amp; friends working together\r\n          since 2007.\r\n        </Popup.Text>\r\n        <Popup.Text>\r\n          Click on a name for individual portfolios. Select ‘Together’ to see\r\n          collaborative projects. The tab on the left takes you to Nous Vous\r\n          Press, where you can buy our books, prints and editions.\r\n        </Popup.Text>\r\n        <Popup.Text>\r\n          Thanks!\r\n          <br />\r\n          Will, Nic &amp; Jay\r\n        </Popup.Text>\r\n      </Popup>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Press = () => {\r\n  return <div>Press Page</div>;\r\n};\r\n\r\nexport default Press;\r\n","export default {\r\n\t'together': {\r\n\t\tname: 'together',\r\n\t\temail: 'together@nousvous.xyz',\r\n\t\tbio: `<p><strong>Nous Vous</strong> began in 2007 as an informal ‘drawing ‘club’, quickly evolving into a creative studio and collaborative visual art practice.</p><p>Since then we have produced work for clients like Domino Records, Facebook, The Contemporary Art Society, Tate, The British Museum, The New York Times, Nike, Walker Arts Center &amp; Honda.</p><p>We’ve worked on a broad range of projects including illustration &amp; graphic design commissions, exhibitions, art direction, animation, publishing and educational programmes.</p><p>We collaborate on ambitious and large-scale projects where we can see opportunities to produce new and exciting work that challenges us. Working together allows us to combine the best bits of our individual practices and processes, creating playful &amp; intelligent outcomes tailored to the requirements of each project.</p><p><strong>For collaborative commissions, please contact <a href=\"mailto:together@nousvous.xyz\">together@nousvous.xyz</a></strong></p>`,\r\n\t},\r\n\t'nicolas burrows': {\r\n\t\tname: 'nicolas burrows',\r\n\t\temail: 'nb@nousvous.xyz',\r\n\t\tbio: `<p>He has made work for The New York Times, Domino Records, Airbnb, Vevo, Modus and The Idler. He is the author/illustrator of the award-winning children’s book ‘The Elephant Hotel’.</p><p>Nicolas is an Associate Lecturer on BA Illustration at Camberwell College of Arts.</p><p><strong>For commissions, please email <a href=\"mailto:nb@nousvous.xyz\">nb@nousvous.xyz</a></strong></p>`,\r\n\t},\r\n\t'jay cover': {\r\n\t\tname: 'jay cover',\r\n\t\temail: 'jc@nousvous.xyz',\r\n\t\tbio: `<p><strong>Jay Cover</strong>’s work focusses on line, form and character. Often working with metaphor or interweaving people &amp; places with humourous sensibility.</p><p>He has created work for Princeton Architectural Press, London Centre For Book Arts, Monocle, Pavillion Books, Apartmento Magazine. A.P.C., Colophon Foundry, Field Projects.</p><p class=\"p1\">Jay is an Associate Lecturer on BA Illustration at Camberwell College of Arts.</p><p class=\"p1\"><strong>For commissions please contact <a href=\"mailto:jc@nousvous.xyz\" target=\"_blank\" rel=\"noopener\">jc@nousvous.xyz</a></strong></p>`,\r\n\t},\r\n\t'william luz': {\r\n\t\tname: 'william luz',\r\n\t\tbio: `<p><strong>William Luz</strong>’s work is concerned with colour and form, he is interested in objects, movement and finding new ways of representing the seen world, with an emphasis on not knowing. He’s created work for Aesop, The Barbican, Nike, and Facebook, has exhibited internationally and writes a regular column in <a href=\"http://www.thesmudgepaper.com/\" target=\"_blank\" rel=\"noopener\">The Smudge paper</a>.</p><p>William is an Associate Lecturer on MA Illustration and Visual Media at London College of Communication</p><p><strong>For commissions please contact&nbsp;<a href=\"mailto:wl@nousvous.xyz\" target=\"_blank\" rel=\"noopener\">wl@nousvous.xyz</a></strong></p>`,\r\n\t\temail: 'wl@nousvous.xyz',\r\n\t},\r\n};","import { type } from 'node:os';\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Bio, Header } from '../components';\r\nimport PersonInfo from '../fixtures/person-info';\r\nimport { BioContext } from '../context';\r\n\r\ntype Params = {\r\n  to: string;\r\n};\r\n\r\nconst Person = () => {\r\n  const { to } = useParams<Params>()!;\r\n  const [showBio, setShowBio] = useState(true);\r\n\r\n  console.log(\r\n    `${to\r\n      .split('-')\r\n      .map((str) => `${str[0].toUpperCase() + str.slice(1)} `)}Page`,\r\n  );\r\n\r\n  /*   type PersonInfoType =\r\n    | 'together'\r\n    | 'jay cover'\r\n    | 'nicolas burrows'\r\n    | 'william luz'; */\r\n\r\n  type PersonInfoType = keyof typeof PersonInfo;\r\n\r\n  const person = PersonInfo[to.replaceAll('-', ' ')! as PersonInfoType];\r\n\r\n  return (\r\n    <BioContext.Provider value={{ showBio, setShowBio }}>\r\n      <Header>\r\n        <Header.Back>Back</Header.Back>\r\n        <Header.Profile>Bio</Header.Profile>\r\n        <Header.Contact>{person.email}</Header.Contact>\r\n      </Header>\r\n\r\n      <Bio>\r\n        <Bio.Close />\r\n        <Bio.Text bio={person.bio} />\r\n      </Bio>\r\n    </BioContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport * as ROUTES from './constants/routes';\r\nimport { Main, Person, Press } from './pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path={ROUTES.PRESS}>\r\n          <Press />\r\n        </Route>\r\n\r\n        {/* path parameter를 이용해 동적 라우팅 */}\r\n        <Route exact path={`${ROUTES.PERSON}/:to`}>\r\n          <Person />\r\n        </Route>\r\n\r\n        <Route exact path={ROUTES.MAIN}>\r\n          <Main />\r\n        </Route>\r\n\r\n        {/* 위 3가지 path에 해당하지 않는다면, 모두 다 ROUTES.MAIN로 리다이렉트 */}\r\n        <Redirect to={{ pathname: ROUTES.MAIN }} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport { GlobalStyles } from './global-styles';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}