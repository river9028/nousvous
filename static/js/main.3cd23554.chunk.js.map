{"version":3,"sources":["global-styles.ts","constants/routes.ts","components/home/styles/home.tsx","components/home/index.tsx","components/press-button/styles/press-button.tsx","components/press-button/index.tsx","components/footer/styles/footer.tsx","context/side-panel.ts","components/footer/index.tsx","components/popup/styles/popup.tsx","components/popup/index.tsx","components/side-panel/styles/side-panel.tsx","components/side-panel/index.tsx","containers/home.tsx","pages/main.tsx","pages/press.tsx","pages/person.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","PRESS","PERSON","Container","styled","div","Pane","Text","h1","Group","TextLink","ReachRouterLink","Background","src","backgroundColor","active","Video","video","HomeContext","createContext","showBackground","setShowBackground","Home","children","restProps","useState","Provider","value","to","useContext","onMouseEnter","onMouseLeave","ROUTES","isVideo","muted","loop","autoPlay","process","type","showLoading","css","Caption","Logo","Image","img","PressButton","history","useHistory","setShowLoading","onClick","console","log","setTimeout","push","Frame","Form","form","Input","input","Button","button","SidePanelContext","showSidePanel","setShowSidePanel","Footer","e","preventDefault","close","Close","p","PopupContext","setClose","setCookie","name","options","Popup","useCookies","cookies","useEffect","today","Date","tomorrow","setDate","getDate","expires","a","SidePanel","href","target","HomeContainer","showInstagram","setShowInstagram","showTwitter","setShowTwitter","Main","Press","Person","useParams","split","map","str","toUpperCase","slice","App","basename","exact","path","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cd23554.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\thtml{\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\tbody {\r\n    margin: 0;\r\n    font-family: \"Brandon\",sans-serif;\r\n    font-weight: 300;\r\n    font-style: normal;\r\n    font-stretch: normal;\r\n    color: #000;\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n    -webkit-font-smoothing: antialiased;\r\n    overflow-x: hidden;\r\n\t}\r\n`;\r\n","export const MAIN = '/';\r\nexport const PRESS = '/press';\r\nexport const PERSON = '/person';\r\n","import styled from 'styled-components';\r\nimport { Link as ReachRouterLink } from 'react-router-dom';\r\n\r\n// 받아올 Props의 타입을 정의\r\ntype Background = {\r\n  src?: string;\r\n  backgroundColor?: string;\r\n  active: boolean;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 35px;\r\n  width: calc(100vw - 35px);\r\n  height: 100%;\r\n\r\n  @media (min-width: 45em) {\r\n    left: 50px;\r\n    width: calc(100vw - 50px);\r\n  }\r\n`;\r\n\r\nexport const Pane = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  font-size: 0;\r\n`;\r\n\r\nexport const Text = styled.h1`\r\n  display: inline-block;\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.5s ease;\r\n  z-index: 10;\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  @media (min-width: 45em) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  &:nth-child(1) ${Text} {\r\n    top: 14%;\r\n    left: 50%;\r\n  }\r\n  &:nth-child(2) ${Text} {\r\n    top: 34%;\r\n    left: 50%;\r\n  }\r\n  &:nth-child(3) ${Text} {\r\n    top: 54%;\r\n    left: 50%;\r\n  }\r\n  &:nth-child(4) ${Text} {\r\n    top: 74%;\r\n    left: 50%;\r\n  }\r\n\r\n  @media (min-width: 45em) {\r\n    &:nth-child(1) ${Text} {\r\n      left: 75%;\r\n      top: 17%;\r\n    }\r\n    &:nth-child(2) ${Text} {\r\n      left: 25%;\r\n      top: 37%;\r\n    }\r\n    &:nth-child(3) ${Text} {\r\n      left: auto;\r\n      right: 15%;\r\n      top: 57%;\r\n    }\r\n    &:nth-child(4) ${Text} {\r\n      left: 35%;\r\n      top: 77%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TextLink = styled(ReachRouterLink)`\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n  color: #000;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  white-space: nowrap;\r\n`;\r\n\r\n// 제네릭을 이용해 정의한 Props 타입을 사용\r\nexport const Background = styled.div<Background>`\r\n  ${({ src, backgroundColor }) =>\r\n    src\r\n      ? `background-image: url(${src})`\r\n      : `background-color: ${backgroundColor}`};\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  z-index: 2;\r\n\r\n  opacity: ${({ active }) => (active ? '1' : '0')};\r\n  transition: opacity 0.3s ease;\r\n`;\r\n\r\nexport const Video = styled.video`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0px;\r\n  width: 100%;\r\n  transform: translate(0px, -50%);\r\n`;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Group,\r\n  Background,\r\n  Pane,\r\n  Text,\r\n  TextLink,\r\n  Video,\r\n} from './styles/home';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n// Home 컴포넌트에서 사용되는 컨텍스트 타입을 정의\r\ntype HomeContext = {\r\n  showBackground: boolean;\r\n  setShowBackground: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\n// Home 컴포넌트 및 하위 컴포넌트의 타입을 정의\r\ntype Background = {\r\n  src: string;\r\n  isVideo?: boolean;\r\n};\r\n\r\ntype TextLink = {\r\n  to: string;\r\n};\r\n\r\ntype Home = {\r\n  Group: React.FC;\r\n  Pane: React.FC;\r\n  TextLink: React.FC<TextLink>;\r\n  Background: React.FC<Background>;\r\n};\r\n\r\n// 위에 정의한 타입과 제네릭을 이용해 컨텍스트 생성.\r\n// null-check를 하지 않기 위해, initial state를 정의해 주었다.\r\nconst HomeContext = createContext<HomeContext>({\r\n  showBackground: false,\r\n  setShowBackground: () => null,\r\n});\r\n\r\n// Home 컴포넌트. &(Intersection) 타입을 이용해 React.FC 뿐만 아니라 Home 타입도 구현할 수 있도록 했다.\r\nconst Home: React.FC & Home = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst HomeGroup: React.FC = ({ children, ...restProps }) => {\r\n  // 배경화면을 opacity 값을 결정하는 상태\r\n  const [showBackground, setShowBackground] = useState(false);\r\n  return (\r\n    // 컨텍스트를 이용해 하위 children에서 상태를 전달\r\n    <HomeContext.Provider value={{ showBackground, setShowBackground }}>\r\n      <Group {...restProps}>{children}</Group>\r\n    </HomeContext.Provider>\r\n  );\r\n};\r\n// Home 컴포넌트에 하위 컴포넌트 할당. 상위 컴포넌트를 가져와 하위 컴포넌트들를 조합해 페이지를 구성.\r\nHome.Group = HomeGroup;\r\n\r\nconst HomePane: React.FC = ({ children, ...restProps }) => {\r\n  return <Pane {...restProps}>{children}</Pane>;\r\n};\r\nHome.Pane = HomePane;\r\n\r\n// 컴포넌트의 props는 제네릭을 이용해 타입 지정.\r\n// React.FC를 이용시 children은 기본 타입 할당.\r\nconst HomeTextLink: React.FC<TextLink> = ({ to, children, ...restProps }) => {\r\n  // useContext를 통해 setShowBackground 가져와\r\n  const { setShowBackground } = useContext(HomeContext);\r\n\r\n  // 액션에 따라 상태를 바꿔준다.\r\n  return (\r\n    <Text\r\n      onMouseEnter={() => {\r\n        setShowBackground(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setShowBackground(false);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {/* path parameter를 통해 동적 라우팅 설정 */}\r\n      <TextLink to={`${ROUTES.PERSON}/${to}`}>{children}</TextLink>\r\n    </Text>\r\n  );\r\n};\r\nHome.TextLink = HomeTextLink;\r\n\r\nconst HomeBackground: React.FC<Background> = ({\r\n  src,\r\n  isVideo,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const { showBackground } = useContext(HomeContext);\r\n\r\n  // 바뀐 상태를 전달\r\n  return isVideo ? (\r\n    <Background active={showBackground} backgroundColor='#ebd9c9'>\r\n      <Video muted loop autoPlay>\r\n        <source src={`${process.env.PUBLIC_URL}/${src}`} type='video/mp4' />\r\n      </Video>\r\n    </Background>\r\n  ) : (\r\n    <Background\r\n      active={showBackground}\r\n      src={`${process.env.PUBLIC_URL}/${src}`}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Background>\r\n  );\r\n};\r\nHome.Background = HomeBackground;\r\n\r\nexport default Home;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{ showLoading: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 35px;\r\n  height: 100%;\r\n  background: #000;\r\n  display: block;\r\n  color: #fff;\r\n  transition: all 0.3s ease;\r\n  z-index: 999;\r\n\r\n  @media (min-width: 45em) {\r\n    width: 50px;\r\n  }\r\n\r\n  // ::before 해당 요소 이전에, 첫 자식 요소를 하나 생성. | content: '' |와 함께 사용.\r\n  ::before {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 100%;\r\n    top: 0px;\r\n    left: 0px;\r\n    transform: translate(-100%, 0px);\r\n    background: #000;\r\n  }\r\n\r\n  :hover {\r\n    ${({ showLoading }) =>\r\n      !showLoading &&\r\n      css`\r\n        transform: translate(10px, 0px);\r\n      `}\r\n  }\r\n\r\n  ${({ showLoading }) =>\r\n    showLoading &&\r\n    css`\r\n      transform: translate(100vw, 0px);\r\n\r\n      ::before {\r\n        width: 100vw;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const Caption = styled.div`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%) rotate(-90deg);\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 100vh;\r\n  text-align: center;\r\n  transform-origin: center;\r\n\r\n  @media (min-width: 45em) {\r\n    font-size: 1.414rem;\r\n    line-height: 1.4em;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  width: 90%;\r\n  left: 5%;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n`;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Caption, Logo, Image } from './styles/press-button';\r\n// 전역상수로 이용할 경로를 저장해 놓은 routes 파일을 가져와 'ROUTES'라는 이름으로 이용\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\ntype Logo = {\r\n  src: string;\r\n};\r\n\r\ntype PressButton = {\r\n  Caption: React.FC;\r\n  Logo: React.FC<Logo>;\r\n};\r\n\r\nconst PressButton: React.FC & PressButton = ({ children, ...restProps }) => {\r\n  const history = useHistory();\r\n  // 메인 화면 검정색 왼쪽바 클릭시, 페이지 전환 효과를 생성할 상태.\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  return (\r\n    <Container\r\n      showLoading={showLoading}\r\n      onClick={() => {\r\n        console.log('clicked');\r\n        setShowLoading(true);\r\n\r\n        setTimeout(() => {\r\n          // 이동할 수 있도록 history 객체의 push를 이용해 ROUTES.PRESS 이동\r\n          history.push(ROUTES.PRESS);\r\n          // 단, 로딩 화면이 2초간 표시된 이후에 실행\r\n        }, 2000);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst PressButtonCaption: React.FC = ({ children, ...restProps }) => {\r\n  return <Caption {...restProps}>{children}</Caption>;\r\n};\r\nPressButton.Caption = PressButtonCaption;\r\n\r\nconst PressButtonLogo: React.FC<Logo> = ({ src, children, ...restProps }) => {\r\n  return (\r\n    <Logo {...restProps}>\r\n      <Image src={`${process.env.PUBLIC_URL}/${src}`} />\r\n    </Logo>\r\n  );\r\n};\r\nPressButton.Logo = PressButtonLogo;\r\n\r\nexport default PressButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  width: 100%;\r\n  padding: 30px;\r\n  z-index: 20;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Frame = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n\r\n  @media (min-width: 45em) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: none;\r\n  @media (min-width: 45em) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: 0px;\r\n  border-bottom: 1px solid #000;\r\n  -webkit-appearance: none;\r\n  border-radius: 0px;\r\n  outline: none;\r\n  line-height: 1em;\r\n  padding: 0px;\r\n  background: transparent;\r\n`;\r\n\r\nexport const Group = styled.form`\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  border: 0;\r\n  background: transparent;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  ::after {\r\n    content: '/';\r\n  }\r\n\r\n  &:last-of-type {\r\n    ::after {\r\n      content: '';\r\n    }\r\n  }\r\n`;\r\n","import React, { createContext } from 'react';\r\n\r\ntype SidePanelContext = {\r\n\tshowSidePanel: boolean;\r\n\tsetShowSidePanel: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst SidePanelContext = createContext<SidePanelContext>({\r\n\tshowSidePanel: false,\r\n\tsetShowSidePanel: () => null,\r\n});\r\n\r\nexport default SidePanelContext;\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { Container, Frame, Form, Input, Group, Button } from './styles/footer';\r\nimport { SidePanelContext } from '../../context';\r\n\r\ntype Footer = {\r\n  Frame: React.FC;\r\n  Form: React.FC;\r\n  Group: React.FC;\r\n  Input: React.FC;\r\n  Button: React.FC;\r\n};\r\n\r\nconst Footer: React.FC & Footer = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst FooterFrame: React.FC = ({ children, ...restProps }) => {\r\n  return <Frame {...restProps}>{children}</Frame>;\r\n};\r\nFooter.Frame = FooterFrame;\r\n\r\nconst FooterForm: React.FC = ({ children, ...restProps }) => {\r\n  return <Form {...restProps}>{children}</Form>;\r\n};\r\nFooter.Form = FooterForm;\r\n\r\nconst FooterInput: React.FC = ({ children, ...restProps }) => {\r\n  return <Input {...restProps}>{children}</Input>;\r\n};\r\nFooter.Input = FooterInput;\r\n\r\nconst FooterGroup: React.FC = ({ children, ...restProps }) => {\r\n  return <Group {...restProps}>{children}</Group>;\r\n};\r\nFooter.Group = FooterGroup;\r\n\r\nconst FooterButton: React.FC = ({ children, ...restProps }) => {\r\n  const { setShowSidePanel } = useContext(SidePanelContext);\r\n\r\n  return (\r\n    <Button\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        setShowSidePanel(true);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\nFooter.Button = FooterButton;\r\n\r\nexport default Footer;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div<{ close: boolean }>`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  max-width: 600px;\r\n  padding: 40px;\r\n  background: #f04e53;\r\n  color: #281246;\r\n  font-size: 1.414rem;\r\n  line-height: 1.4em;\r\n  z-index: 999;\r\n  max-height: 70vh;\r\n  overflow: auto;\r\n  transition: opacity 0.3s ease;\r\n\r\n  ${({ close }) =>\r\n    close &&\r\n    css`\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    `};\r\n\r\n  @media (min-width: 45em) {\r\n    font-size: 1.414rem;\r\n    line-height: 1.4em;\r\n  }\r\n`;\r\n\r\nexport const Close = styled.button`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-image: url(${`${process.env.PUBLIC_URL}/images/icon/close-navy.svg`});\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 0;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin: 0px;\r\n  margin-bottom: 1em;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0px;\r\n  }\r\n`;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { CookieSetOptions } from 'universal-cookie';\r\nimport { Container, Close, Text } from './styles/popup';\r\n\r\ntype PopupContext = {\r\n  close: boolean;\r\n  setClose: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setCookie: (\r\n    name: string,\r\n    value: any,\r\n    options?: CookieSetOptions | undefined,\r\n  ) => void;\r\n};\r\n\r\ntype Popup = {\r\n  Close: React.FC;\r\n  Text: React.FC;\r\n};\r\n\r\nconst PopupContext = createContext<PopupContext>({\r\n  close: true,\r\n  setClose: () => null,\r\n  setCookie: (\r\n    name: string,\r\n    value: any,\r\n    options?: CookieSetOptions | undefined,\r\n  ) => null,\r\n});\r\n\r\nconst Popup: React.FC & Popup = ({ children, ...restProps }) => {\r\n  const [close, setClose] = useState(true);\r\n  // react-cookie를 이용해 팝업의 close 상태를 쿠키에 저장\r\n  const [cookies, setCookie, removeCookie] = useCookies(['close']);\r\n\r\n  useEffect(() => {\r\n    // 쿠키에 close가 없으면\r\n    if (!cookies.close) {\r\n      // close의 상태를 false로 변경('팝업을 닫지 않음')\r\n      setClose(false);\r\n    } else {\r\n      // 아니면, close의 상태를 ture(initial state)로 변경('팝업을 닫음')\r\n      setClose(true);\r\n    }\r\n  }, [cookies, cookies.close, setCookie]);\r\n\r\n  return (\r\n    <PopupContext.Provider value={{ close, setClose, setCookie }}>\r\n      <Container close={close} {...restProps}>\r\n        {children}\r\n      </Container>\r\n    </PopupContext.Provider>\r\n  );\r\n};\r\n\r\nconst PopupClose: React.FC = ({ children, ...restProps }) => {\r\n  const { setClose, setCookie } = useContext(PopupContext);\r\n\r\n  // 내일 날짜의 Date를 가져오기 위한 식\r\n  const today = new Date();\r\n  const tomorrow = new Date(today);\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n  console.log(tomorrow);\r\n\r\n  return (\r\n    <Close\r\n      onClick={() => {\r\n        console.log('close');\r\n        // 클로즈 버튼을 누르면 팝업을 닫고,\r\n        setClose(true);\r\n        // 쿠키 또한 새롭게 설정해 준다. setCookie('key', 'value', {option})\r\n        setCookie('close', true, {\r\n          expires: tomorrow,\r\n          // maxAge: 5,\r\n        });\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Close>\r\n  );\r\n};\r\nPopup.Close = PopupClose;\r\n\r\nconst PopupText: React.FC = ({ children, ...restProps }) => {\r\n  return <Text {...restProps}>{children}</Text>;\r\n};\r\nPopup.Text = PopupText;\r\n\r\nexport default Popup;\r\n","import styled, { css } from 'styled-components';\r\n\r\ntype Group = {\r\n  showSidePanel: boolean;\r\n};\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Group = styled.div<Group>`\r\n  position: absolute;\r\n  top: 0px;\r\n  right: 0px;\r\n  width: 80%;\r\n  max-width: 400px;\r\n  height: 100%;\r\n  background: #f193a2;\r\n  z-index: 20;\r\n  transform: translate(100%, 0px);\r\n  transition: transform 0.3s ease;\r\n  overflow: auto;\r\n  padding: 30px;\r\n  box-sizing: border-box;\r\n\r\n  transform: ${({ showSidePanel }) =>\r\n    showSidePanel ? 'translate(0px, 0px)' : 'translate(100%, 0px)'};\r\n\r\n  &:first-child {\r\n    padding-top: 60px;\r\n    background: #d2dccb;\r\n  }\r\n`;\r\n\r\nexport const Close = styled.button`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-image: url(${`${process.env.PUBLIC_URL}/images/icon/close-navy.svg`});\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border: 0;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport const TextLink = styled.a`\r\n  color: #000;\r\n  text-decoration: none;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { Container, Group, Close, TextLink } from './styles/side-panel';\r\nimport { SidePanelContext } from '../../context';\r\n\r\ntype SidePanel = {\r\n  Group: React.FC;\r\n  Close: React.FC;\r\n  TextLink: React.FC<{ href: string }>;\r\n};\r\n\r\nconst SidePanel: React.FC & SidePanel = ({ children, ...restProps }) => {\r\n  return <Container {...restProps}>{children}</Container>;\r\n};\r\n\r\nconst SidePanelGroup: React.FC = ({ children, ...restProps }) => {\r\n  const { showSidePanel } = useContext(SidePanelContext);\r\n  return (\r\n    <Group showSidePanel={showSidePanel} {...restProps}>\r\n      {children}\r\n    </Group>\r\n  );\r\n};\r\nSidePanel.Group = SidePanelGroup;\r\n\r\nconst SidePanelClose: React.FC = ({ children, ...restProps }) => {\r\n  const { setShowSidePanel } = useContext(SidePanelContext);\r\n\r\n  return (\r\n    <Close\r\n      onClick={() => {\r\n        console.log('close');\r\n        setShowSidePanel(false);\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Close>\r\n  );\r\n};\r\nSidePanel.Close = SidePanelClose;\r\n\r\nconst SidePanelTextLink: React.FC<{ href: string }> = ({\r\n  href,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    // 새 탭에서 뜰 수 있도록 target='_blank' 추가\r\n    <TextLink href={href} target='_blank' {...restProps}>\r\n      {children}\r\n    </TextLink>\r\n  );\r\n};\r\nSidePanel.TextLink = SidePanelTextLink;\r\n\r\nexport default SidePanel;\r\n","import React, { useState } from 'react';\r\nimport { Footer, Home, SidePanel } from '../components';\r\n\r\n// 전역에서 사용할 수 있는 전역 컨텍스트로 선언해 불러와 사용\r\nimport { SidePanelContext } from '../context';\r\n\r\nconst HomeContainer = () => {\r\n  // 푸터 오른쪽 하단 버튼 클릭시, 사이드 패널을 보여줄 상태 (twitter, instagram)\r\n  const [showInstagram, setShowInstagram] = useState(false);\r\n  const [showTwitter, setShowTwitter] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Home>\r\n        <Home.Pane>\r\n          <Home.Group>\r\n            <Home.TextLink to='together'>Together</Home.TextLink>\r\n            <Home.Background isVideo src='videos/background/together.mp4' />\r\n          </Home.Group>\r\n\r\n          <Home.Group>\r\n            <Home.TextLink to='nicolas-burrows'>Nicolas Burrows</Home.TextLink>\r\n            <Home.Background src='images/background/nicolas-burrows.jpg' />\r\n          </Home.Group>\r\n\r\n          <Home.Group>\r\n            <Home.TextLink to='jay-cover'>Jay Cover</Home.TextLink>\r\n            <Home.Background src='images/background/jay-cover.jpg' />\r\n          </Home.Group>\r\n\r\n          <Home.Group>\r\n            <Home.TextLink to='william-luz'>William Luz</Home.TextLink>\r\n            <Home.Background src='images/background/william-luz.jpg' />\r\n          </Home.Group>\r\n        </Home.Pane>\r\n\r\n        <Footer>\r\n          <Footer.Frame>\r\n            <Footer.Group>\r\n              <Footer.Form>\r\n                {/* -eslint 경고로 인해 추가해 주었다. jsx-a11y/label-has-associated-control\": 0 */}\r\n                <label>\r\n                  mailing list &nbsp;\r\n                  <Footer.Input />\r\n                </label>\r\n              </Footer.Form>\r\n            </Footer.Group>\r\n\r\n            {/* 두 버튼을 감싸고 있는 Footer Group 컴포넌트 상단에 컨텍스트를 감싸 줌 */}\r\n            {/* but, value를 다르게 지정해 서로 다른 Side Panel이 나올 수 있도록 함 */}\r\n            <Footer.Group>\r\n              <SidePanelContext.Provider\r\n                value={{\r\n                  showSidePanel: showTwitter,\r\n                  setShowSidePanel: setShowTwitter,\r\n                }}\r\n              >\r\n                <Footer.Button>twitter</Footer.Button>\r\n              </SidePanelContext.Provider>\r\n              <SidePanelContext.Provider\r\n                value={{\r\n                  showSidePanel: showInstagram,\r\n                  setShowSidePanel: setShowInstagram,\r\n                }}\r\n              >\r\n                <Footer.Button>instagram</Footer.Button>\r\n              </SidePanelContext.Provider>\r\n            </Footer.Group>\r\n          </Footer.Frame>\r\n        </Footer>\r\n      </Home>\r\n\r\n      <SidePanel>\r\n        {/* SidePanel Group도 위와 동일 */}\r\n        <SidePanelContext.Provider\r\n          value={{\r\n            showSidePanel: showInstagram,\r\n            setShowSidePanel: setShowInstagram,\r\n          }}\r\n        >\r\n          <SidePanel.Group>\r\n            <SidePanel.Close />\r\n            <SidePanel.TextLink href='https://www.instagram.com/nous_vous_collective/'>\r\n              Follow us on Instagram\r\n            </SidePanel.TextLink>\r\n          </SidePanel.Group>\r\n        </SidePanelContext.Provider>\r\n\r\n        <SidePanelContext.Provider\r\n          value={{\r\n            showSidePanel: showTwitter,\r\n            setShowSidePanel: setShowTwitter,\r\n          }}\r\n        >\r\n          <SidePanel.Group>\r\n            <SidePanel.Close />\r\n            <SidePanel.TextLink href='https://twitter.com/nousvous'>\r\n              Follow us on Twitter\r\n            </SidePanel.TextLink>\r\n          </SidePanel.Group>\r\n        </SidePanelContext.Provider>\r\n      </SidePanel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport { Popup, PressButton } from '../components';\r\nimport { HomeContainer } from '../containers';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <PressButton>\r\n        <PressButton.Caption>\r\n          <b>Nous Vous Press</b>\r\n          &nbsp; Books, prints & editions\r\n        </PressButton.Caption>\r\n\r\n        <PressButton.Logo src='/images/logo/nvpress.svg' />\r\n      </PressButton>\r\n\r\n      <HomeContainer />\r\n\r\n      <Popup>\r\n        <Popup.Close />\r\n        <Popup.Text>\r\n          Nous Vous is a collective of artists &amp; friends working together\r\n          since 2007.\r\n        </Popup.Text>\r\n        <Popup.Text>\r\n          Click on a name for individual portfolios. Select ‘Together’ to see\r\n          collaborative projects. The tab on the left takes you to Nous Vous\r\n          Press, where you can buy our books, prints and editions.\r\n        </Popup.Text>\r\n        <Popup.Text>\r\n          Thanks!\r\n          <br />\r\n          Will, Nic &amp; Jay\r\n        </Popup.Text>\r\n      </Popup>\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Press = () => {\r\n  return <div>Press Page</div>;\r\n};\r\n\r\nexport default Press;\r\n","import { type } from 'node:os';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\ntype Params = {\r\n  to: string;\r\n};\r\n\r\nconst Person = () => {\r\n  const { to } = useParams<Params>()!;\r\n  console.log(to);\r\n\r\n  return (\r\n    <div>\r\n      {to.split('-').map((str) => `${str[0].toUpperCase() + str.slice(1)} `)}\r\n      Page\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport * as ROUTES from './constants/routes';\r\nimport { Main, Person, Press } from './pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path={ROUTES.PRESS}>\r\n          <Press />\r\n        </Route>\r\n\r\n        {/* path parameter를 이용해 동적 라우팅 */}\r\n        <Route exact path={`${ROUTES.PERSON}/:to`}>\r\n          <Person />\r\n        </Route>\r\n\r\n        <Route exact path={ROUTES.MAIN}>\r\n          <Main />\r\n        </Route>\r\n\r\n        {/* 위 3가지 path에 해당하지 않는다면, 모두 다 ROUTES.MAIN로 리다이렉트 */}\r\n        <Redirect to={{ pathname: ROUTES.MAIN }} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport { GlobalStyles } from './global-styles';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}